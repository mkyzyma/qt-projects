// This file was generated by ODB, object-relational mapping (ORM)
// compiler for C++.
//

#include <odb/pre.hxx>

#include <odb/database.hxx>
#include <odb/schema-catalog-impl.hxx>

#include <odb/details/unused.hxx>

namespace odb
{
  static bool
  create_schema (database& db, unsigned short pass, bool drop)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (pass);
    ODB_POTENTIALLY_UNUSED (drop);

    if (drop)
    {
      switch (pass)
      {
        case 1:
        {
          return true;
        }
        case 2:
        {
          db.execute ("DROP TABLE IF EXISTS \"LoanOper\" CASCADE");
          db.execute ("DROP TABLE IF EXISTS \"LoanGarantor\" CASCADE");
          db.execute ("DROP TABLE IF EXISTS \"Loan\" CASCADE");
          db.execute ("DROP TABLE IF EXISTS \"LoanType\" CASCADE");
          db.execute ("DROP TABLE IF EXISTS \"Member\" CASCADE");
          db.execute ("DROP TABLE IF EXISTS \"Person\" CASCADE");
          db.execute ("DROP TABLE IF EXISTS \"User\" CASCADE");
          db.execute ("DROP TABLE IF EXISTS \"schema_version\"");
          return false;
        }
      }
    }
    else
    {
      switch (pass)
      {
        case 1:
        {
          db.execute ("CREATE TABLE \"User\" (\n"
                      "  \"isDeleted\" BOOLEAN NOT NULL,\n"
                      "  \"deleteTime\" TIMESTAMP NULL,\n"
                      "  \"deletedBy\" BIGINT NULL,\n"
                      "  \"id\" BIGSERIAL NOT NULL PRIMARY KEY,\n"
                      "  \"username\" TEXT NULL,\n"
                      "  \"password\" TEXT NULL,\n"
                      "  CONSTRAINT \"deletedBy_fk\"\n"
                      "    FOREIGN KEY (\"deletedBy\")\n"
                      "    REFERENCES \"User\" (\"id\")\n"
                      "    INITIALLY DEFERRED)");
          db.execute ("CREATE TABLE \"Person\" (\n"
                      "  \"isDeleted\" BOOLEAN NOT NULL,\n"
                      "  \"deleteTime\" TIMESTAMP NULL,\n"
                      "  \"deletedBy\" BIGINT NULL,\n"
                      "  \"createTime\" TIMESTAMP NULL,\n"
                      "  \"idUser\" BIGINT NOT NULL,\n"
                      "  \"id\" BIGSERIAL NOT NULL PRIMARY KEY,\n"
                      "  \"name_first\" TEXT NULL,\n"
                      "  \"name_middle\" TEXT NULL,\n"
                      "  \"name_last\" TEXT NULL,\n"
                      "  \"name_full\" TEXT NULL,\n"
                      "  \"pass_series\" char(4) NULL,\n"
                      "  \"pass_number\" char(6) NULL,\n"
                      "  \"pass_date\" DATE NULL,\n"
                      "  \"pass_org\" TEXT NULL,\n"
                      "  \"pass_orgCode\" char(6) NULL,\n"
                      "  \"inn\" char(12) NULL,\n"
                      "  \"snils\" char(14) NULL,\n"
                      "  \"idMember\" BIGINT NULL,\n"
                      "  CONSTRAINT \"deletedBy_fk\"\n"
                      "    FOREIGN KEY (\"deletedBy\")\n"
                      "    REFERENCES \"User\" (\"id\")\n"
                      "    INITIALLY DEFERRED,\n"
                      "  CONSTRAINT \"idUser_fk\"\n"
                      "    FOREIGN KEY (\"idUser\")\n"
                      "    REFERENCES \"User\" (\"id\")\n"
                      "    INITIALLY DEFERRED)");
          db.execute ("CREATE TABLE \"Member\" (\n"
                      "  \"isDeleted\" BOOLEAN NOT NULL,\n"
                      "  \"deleteTime\" TIMESTAMP NULL,\n"
                      "  \"deletedBy\" BIGINT NULL,\n"
                      "  \"createTime\" TIMESTAMP NULL,\n"
                      "  \"idUser\" BIGINT NOT NULL,\n"
                      "  \"id\" BIGSERIAL NOT NULL PRIMARY KEY,\n"
                      "  \"inDate\" DATE NULL,\n"
                      "  \"outDate\" DATE NULL,\n"
                      "  \"exitReason\" INTEGER NOT NULL,\n"
                      "  \"idPerson\" BIGINT NOT NULL,\n"
                      "  CONSTRAINT \"deletedBy_fk\"\n"
                      "    FOREIGN KEY (\"deletedBy\")\n"
                      "    REFERENCES \"User\" (\"id\")\n"
                      "    INITIALLY DEFERRED,\n"
                      "  CONSTRAINT \"idUser_fk\"\n"
                      "    FOREIGN KEY (\"idUser\")\n"
                      "    REFERENCES \"User\" (\"id\")\n"
                      "    INITIALLY DEFERRED,\n"
                      "  CONSTRAINT \"idPerson_fk\"\n"
                      "    FOREIGN KEY (\"idPerson\")\n"
                      "    REFERENCES \"Person\" (\"id\")\n"
                      "    INITIALLY DEFERRED)");
          db.execute ("CREATE TABLE \"LoanType\" (\n"
                      "  \"isDeleted\" BOOLEAN NOT NULL,\n"
                      "  \"deleteTime\" TIMESTAMP NULL,\n"
                      "  \"deletedBy\" BIGINT NULL,\n"
                      "  \"createTime\" TIMESTAMP NULL,\n"
                      "  \"idUser\" BIGINT NOT NULL,\n"
                      "  \"id\" BIGSERIAL NOT NULL PRIMARY KEY,\n"
                      "  \"caption\" char(63) NULL,\n"
                      "  \"rate\" BIGINT NOT NULL,\n"
                      "  CONSTRAINT \"deletedBy_fk\"\n"
                      "    FOREIGN KEY (\"deletedBy\")\n"
                      "    REFERENCES \"User\" (\"id\")\n"
                      "    INITIALLY DEFERRED,\n"
                      "  CONSTRAINT \"idUser_fk\"\n"
                      "    FOREIGN KEY (\"idUser\")\n"
                      "    REFERENCES \"User\" (\"id\")\n"
                      "    INITIALLY DEFERRED)");
          db.execute ("CREATE TABLE \"Loan\" (\n"
                      "  \"isDeleted\" BOOLEAN NOT NULL,\n"
                      "  \"deleteTime\" TIMESTAMP NULL,\n"
                      "  \"deletedBy\" BIGINT NULL,\n"
                      "  \"createTime\" TIMESTAMP NULL,\n"
                      "  \"idUser\" BIGINT NOT NULL,\n"
                      "  \"id\" BIGSERIAL NOT NULL PRIMARY KEY,\n"
                      "  \"openDate\" DATE NULL,\n"
                      "  \"closeDate\" DATE NULL,\n"
                      "  \"isClosed\" BOOLEAN NOT NULL,\n"
                      "  \"rate\" BIGINT NOT NULL,\n"
                      "  \"limit\" BIGINT NOT NULL,\n"
                      "  \"length\" BIGINT NOT NULL,\n"
                      "  \"sum\" BIGINT NOT NULL,\n"
                      "  \"remains\" BIGINT NOT NULL,\n"
                      "  \"prc\" BIGINT NOT NULL,\n"
                      "  \"idMember\" BIGINT NOT NULL,\n"
                      "  \"idPerson\" BIGINT NOT NULL,\n"
                      "  \"idLoanType\" BIGINT NOT NULL,\n"
                      "  CONSTRAINT \"deletedBy_fk\"\n"
                      "    FOREIGN KEY (\"deletedBy\")\n"
                      "    REFERENCES \"User\" (\"id\")\n"
                      "    INITIALLY DEFERRED,\n"
                      "  CONSTRAINT \"idUser_fk\"\n"
                      "    FOREIGN KEY (\"idUser\")\n"
                      "    REFERENCES \"User\" (\"id\")\n"
                      "    INITIALLY DEFERRED,\n"
                      "  CONSTRAINT \"idMember_fk\"\n"
                      "    FOREIGN KEY (\"idMember\")\n"
                      "    REFERENCES \"Member\" (\"id\")\n"
                      "    INITIALLY DEFERRED,\n"
                      "  CONSTRAINT \"idPerson_fk\"\n"
                      "    FOREIGN KEY (\"idPerson\")\n"
                      "    REFERENCES \"Person\" (\"id\")\n"
                      "    INITIALLY DEFERRED,\n"
                      "  CONSTRAINT \"idLoanType_fk\"\n"
                      "    FOREIGN KEY (\"idLoanType\")\n"
                      "    REFERENCES \"LoanType\" (\"id\")\n"
                      "    INITIALLY DEFERRED)");
          db.execute ("CREATE TABLE \"LoanGarantor\" (\n"
                      "  \"isDeleted\" BOOLEAN NOT NULL,\n"
                      "  \"deleteTime\" TIMESTAMP NULL,\n"
                      "  \"deletedBy\" BIGINT NULL,\n"
                      "  \"createTime\" TIMESTAMP NULL,\n"
                      "  \"idUser\" BIGINT NOT NULL,\n"
                      "  \"id\" BIGSERIAL NOT NULL PRIMARY KEY,\n"
                      "  \"addDate\" DATE NULL,\n"
                      "  \"loan\" BIGINT NULL,\n"
                      "  \"person\" BIGINT NULL,\n"
                      "  CONSTRAINT \"deletedBy_fk\"\n"
                      "    FOREIGN KEY (\"deletedBy\")\n"
                      "    REFERENCES \"User\" (\"id\")\n"
                      "    INITIALLY DEFERRED,\n"
                      "  CONSTRAINT \"idUser_fk\"\n"
                      "    FOREIGN KEY (\"idUser\")\n"
                      "    REFERENCES \"User\" (\"id\")\n"
                      "    INITIALLY DEFERRED,\n"
                      "  CONSTRAINT \"loan_fk\"\n"
                      "    FOREIGN KEY (\"loan\")\n"
                      "    REFERENCES \"Loan\" (\"id\")\n"
                      "    INITIALLY DEFERRED,\n"
                      "  CONSTRAINT \"person_fk\"\n"
                      "    FOREIGN KEY (\"person\")\n"
                      "    REFERENCES \"Person\" (\"id\")\n"
                      "    INITIALLY DEFERRED)");
          db.execute ("CREATE TABLE \"LoanOper\" (\n"
                      "  \"isDeleted\" BOOLEAN NOT NULL,\n"
                      "  \"deleteTime\" TIMESTAMP NULL,\n"
                      "  \"deletedBy\" BIGINT NULL,\n"
                      "  \"createTime\" TIMESTAMP NULL,\n"
                      "  \"idUser\" BIGINT NOT NULL,\n"
                      "  \"id\" BIGSERIAL NOT NULL PRIMARY KEY,\n"
                      "  \"plan_date\" DATE NULL,\n"
                      "  \"plan_amount\" BIGINT NOT NULL,\n"
                      "  \"plan_loan\" BIGINT NOT NULL,\n"
                      "  \"plan_loanDept\" BIGINT NOT NULL,\n"
                      "  \"plan_prc\" BIGINT NOT NULL,\n"
                      "  \"plan_prcDept\" BIGINT NOT NULL,\n"
                      "  \"plan_peni\" BIGINT NOT NULL,\n"
                      "  \"fact_date\" DATE NULL,\n"
                      "  \"fact_amount\" BIGINT NOT NULL,\n"
                      "  \"fact_loan\" BIGINT NOT NULL,\n"
                      "  \"fact_loanDept\" BIGINT NOT NULL,\n"
                      "  \"fact_prc\" BIGINT NOT NULL,\n"
                      "  \"fact_prcDept\" BIGINT NOT NULL,\n"
                      "  \"fact_peni\" BIGINT NOT NULL,\n"
                      "  \"idPerson\" BIGINT NOT NULL,\n"
                      "  \"idMember\" BIGINT NOT NULL,\n"
                      "  \"idLoan\" BIGINT NOT NULL,\n"
                      "  CONSTRAINT \"deletedBy_fk\"\n"
                      "    FOREIGN KEY (\"deletedBy\")\n"
                      "    REFERENCES \"User\" (\"id\")\n"
                      "    INITIALLY DEFERRED,\n"
                      "  CONSTRAINT \"idUser_fk\"\n"
                      "    FOREIGN KEY (\"idUser\")\n"
                      "    REFERENCES \"User\" (\"id\")\n"
                      "    INITIALLY DEFERRED,\n"
                      "  CONSTRAINT \"idPerson_fk\"\n"
                      "    FOREIGN KEY (\"idPerson\")\n"
                      "    REFERENCES \"Person\" (\"id\")\n"
                      "    INITIALLY DEFERRED,\n"
                      "  CONSTRAINT \"idMember_fk\"\n"
                      "    FOREIGN KEY (\"idMember\")\n"
                      "    REFERENCES \"Member\" (\"id\")\n"
                      "    INITIALLY DEFERRED,\n"
                      "  CONSTRAINT \"idLoan_fk\"\n"
                      "    FOREIGN KEY (\"idLoan\")\n"
                      "    REFERENCES \"Loan\" (\"id\")\n"
                      "    INITIALLY DEFERRED)");
          return true;
        }
        case 2:
        {
          db.execute ("ALTER TABLE \"Person\"\n"
                      "  ADD CONSTRAINT \"idMember_fk\"\n"
                      "    FOREIGN KEY (\"idMember\")\n"
                      "    REFERENCES \"Member\" (\"id\")\n"
                      "    INITIALLY DEFERRED");
          db.execute ("CREATE TABLE \"schema_version\" (\n"
                      "  \"name\" TEXT NOT NULL PRIMARY KEY,\n"
                      "  \"version\" BIGINT NOT NULL,\n"
                      "  \"migration\" BOOLEAN NOT NULL)");
          db.execute ("INSERT INTO \"schema_version\" (\n"
                      "  \"name\", \"version\", \"migration\")\n"
                      "  VALUES ('', 1, FALSE)");
          return false;
        }
      }
    }

    return false;
  }

  static const schema_catalog_create_entry
  create_schema_entry_ (
    id_pgsql,
    "",
    &create_schema);

  static const schema_catalog_migrate_entry
  migrate_schema_entry_1_ (
    id_pgsql,
    "",
    1ULL,
    0);
}

#include <odb/post.hxx>
